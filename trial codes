class ConfigurationManager:
    def __init__(self, config: Path = CONFIG_FILE_PATH) -> None:
        if not config.is_file():
            raise FileNotFoundError(f"Config file not found: {config}")
        self.config_info = read_yaml(config)
        self.current_time_stamp: str = CURRENT_TIME_STAMP
        self.training_pipeline_config = self.get_training_pipeline_config()
        self.artifact_dir = self.training_pipeline_config.artifacts_root

    def get_training_pipeline_config(self) -> TraningPipelineConfig:
        training_pipeline_config = self.config_info[constants.TRAINING_PIPELINE_CONFIG_KEY]
        artifact_dir = Path(ROOT_DIR) / training_pipeline_config[constants.TRAINING_PIPELINE_ARTIFACT_DIR_KEY]
        return TraningPipelineConfig(artifacts_root=artifact_dir)

    def get_data_ingestion_config(self) -> DataIngestionConfig:
        data_ingestion_dir = Path(self.artifact_dir) / constants.DATA_INGESTION_ARTIFACT_DIR_KEY
        data_ingestion_info = self.config_info[constants.DATA_INGESTION_CONFIG_KEY]
        dataset_download_url = data_ingestion_info[constants.DATA_INGESTION_URL_KEY]
        zip_dir = data_ingestion_dir / data_ingestion_info[constants.DATA_INGESTION_ZIP_DIR_KEY]
        raw_data_dir = data_ingestion_dir / data_ingestion_info[constants.DATA_INGESTION_RAW_DATA_DIR_KEY]
        ingested_data_dir = data_ingestion_dir / data_ingestion_info[constants.DATA_INGESTION_INGESTED_DIR_KEY]
        ingested_train_dir = data_ingestion_dir / data_ingestion_info[constants.DATA_INGESTION_TRAIN_DIR_KEY]
        ingested_test_dir = data_ingestion_dir / data_ingestion_info[constants.DATA_INGESTION_TEST_DIR_KEY]
        stratify = data_ingestion_info[constants.DATA_INGESTION_STRATIFY_COL_KEY]
        test_size = data_ingestion_info[constants.DATA_INGESTION_TEST_SIZE_KEY]
        return DataIngestionConfig(
            source_url=dataset_download_url,
            raw_data_dir=raw_data_dir,
            zip_dir=zip_dir,
            ingested_dir=ingested_data_dir,
            ingested_train_dir=ingested_train_dir,
            ingested_test_dir=ingested_test_dir,
            stratify=stratify,
            test_size=test_size,
        )


from pathlib import Path
from typing import Optional

class Config:
    def __init__(self, config_file_path: str):
        self.config = self.load_config(config_file_path)
    
    def load_config(self, config_file_path: str) -> dict:
        with open(config_file_path, "r") as f:
            config = yaml.safe_load(f)
        return config
    
    def get_data_ingestion_config(self) -> DataIngestionConfig:
        data_ingestion_config = self.config.get("data_ingestion_config", {})
        data_ingestion_info = self.config.get("data_ingestion", {})
        return DataIngestionConfig(
            source_url=data_ingestion_info.get("source_url", data_ingestion_config.get("source_url")),
            raw_data_dir=Path(data_ingestion_info.get("raw_data_dir", data_ingestion_config.get("raw_data_dir"))),
            zip_dir=Path(data_ingestion_info.get("zip_dir", data_ingestion_config.get("zip_dir"))),
            ingested_dir=Path(data_ingestion_info.get("ingested_dir", data_ingestion_config.get("ingested_dir"))),
            ingested_train_dir=Path(data_ingestion_info.get("ingested_train_dir", data_ingestion_config.get("ingested_train_dir"))),
            ingested_test_dir=Path(data_ingestion_info.get("ingested_test_dir", data_ingestion_config.get("ingested_test_dir"))),
            stratify=data_ingestion_info.get("stratify", data_ingestion_config.get("stratify")),
            test_size=data_ingestion_info.get("test_size", data_ingestion_config.get("test_size"))
        )
