For fraud detection, the most important evaluation metric is the model's ability to accurately detect fraud cases. Therefore, you should choose the evaluation metric that focuses on the minority class (i.e., the fraud cases).

The most commonly used evaluation metrics for fraud detection are precision, recall, and F1-score. Precision measures the proportion of true positive predictions among all positive predictions, while recall measures the proportion of true positive predictions among all actual positive cases. F1-score is the harmonic mean of precision and recall, and it combines both metrics to give a single score that balances the trade-off between precision and recall.

In general, you want a model with high precision and recall, meaning that it can accurately identify fraud cases while minimizing false positives (legitimate transactions incorrectly identified as fraud) and false negatives (fraudulent transactions incorrectly identified as legitimate).

It is also recommended to use additional evaluation metrics such as AUC-ROC, which measures the model's ability to distinguish between the positive and negative classes, and to perform cross-validation to estimate the model's generalization performance.

---------------------
Evaluation metrics: For highly imbalanced data, it is recommended to use metrics that focus on the minority class. You can use metrics like precision, recall, and F1-score for evaluating the model's performance. Additionally, you can also use AUC-ROC to evaluate the model's ability to distinguish between the positive and negative classes.

Transformations: You may need to perform data balancing techniques such as undersampling, oversampling, or SMOTE (Synthetic Minority Over-sampling Technique) to address the class imbalance issue.

EDA: You can explore the distribution of the target variable and identify any patterns or correlations between the features and the target variable. Additionally, you can also check for missing values, outliers, and other data quality issues.

Feature engineering: You may want to create new features based on domain knowledge or transform existing features to enhance the predictive power of the model. For example, you can create features based on time intervals, aggregate statistics, or interaction terms.

Model selection: Several models can be used for fraud detection, including logistic regression, random forests, gradient boosting, and neural networks. You may want to experiment with different models and compare their performance based on the evaluation metrics.

Approach: Given the highly imbalanced data, a recommended approach would be to use a combination of data balancing techniques, feature engineering, and model selection to build a robust fraud detection model. Additionally, you may want to use cross-validation to assess the model's performance and fine-tune the model's hyperparameters.